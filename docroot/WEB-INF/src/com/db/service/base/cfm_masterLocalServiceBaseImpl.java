/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.db.service.base;

import com.db.model.cfm_master;

import com.db.service.cfm_masterLocalService;
import com.db.service.persistence.about_usPersistence;
import com.db.service.persistence.acheivementsPersistence;
import com.db.service.persistence.cfmPersistence;
import com.db.service.persistence.cfm_masterPersistence;
import com.db.service.persistence.club_usersPersistence;
import com.db.service.persistence.clubsPersistence;
import com.db.service.persistence.genere_masterPersistence;
import com.db.service.persistence.hit_countPersistence;
import com.db.service.persistence.media_linksPersistence;
import com.db.service.persistence.media_links_masterPersistence;
import com.db.service.persistence.messagesPersistence;
import com.db.service.persistence.notificationsPersistence;
import com.db.service.persistence.profilePersistence;
import com.db.service.persistence.profile_social_linkPersistence;
import com.db.service.persistence.recommendationsPersistence;
import com.db.service.persistence.skillPersistence;
import com.db.service.persistence.skill_user_mappingPersistence;
import com.db.service.persistence.social_loginPersistence;
import com.db.service.persistence.social_type_masterPersistence;
import com.db.service.persistence.type_masterPersistence;
import com.db.service.persistence.user_contactPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the cfm_master local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.db.service.impl.cfm_masterLocalServiceImpl}.
 * </p>
 *
 * @author ganjuss
 * @see com.db.service.impl.cfm_masterLocalServiceImpl
 * @see com.db.service.cfm_masterLocalServiceUtil
 * @generated
 */
public abstract class cfm_masterLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements cfm_masterLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.db.service.cfm_masterLocalServiceUtil} to access the cfm_master local service.
	 */

	/**
	 * Adds the cfm_master to the database. Also notifies the appropriate model listeners.
	 *
	 * @param cfm_master the cfm_master
	 * @return the cfm_master that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public cfm_master addcfm_master(cfm_master cfm_master)
		throws SystemException {
		cfm_master.setNew(true);

		return cfm_masterPersistence.update(cfm_master);
	}

	/**
	 * Creates a new cfm_master with the primary key. Does not add the cfm_master to the database.
	 *
	 * @param cid the primary key for the new cfm_master
	 * @return the new cfm_master
	 */
	@Override
	public cfm_master createcfm_master(long cid) {
		return cfm_masterPersistence.create(cid);
	}

	/**
	 * Deletes the cfm_master with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param cid the primary key of the cfm_master
	 * @return the cfm_master that was removed
	 * @throws PortalException if a cfm_master with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public cfm_master deletecfm_master(long cid)
		throws PortalException, SystemException {
		return cfm_masterPersistence.remove(cid);
	}

	/**
	 * Deletes the cfm_master from the database. Also notifies the appropriate model listeners.
	 *
	 * @param cfm_master the cfm_master
	 * @return the cfm_master that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public cfm_master deletecfm_master(cfm_master cfm_master)
		throws SystemException {
		return cfm_masterPersistence.remove(cfm_master);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(cfm_master.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return cfm_masterPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.db.model.impl.cfm_masterModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return cfm_masterPersistence.findWithDynamicQuery(dynamicQuery, start,
			end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.db.model.impl.cfm_masterModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return cfm_masterPersistence.findWithDynamicQuery(dynamicQuery, start,
			end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return cfm_masterPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return cfm_masterPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public cfm_master fetchcfm_master(long cid) throws SystemException {
		return cfm_masterPersistence.fetchByPrimaryKey(cid);
	}

	/**
	 * Returns the cfm_master with the primary key.
	 *
	 * @param cid the primary key of the cfm_master
	 * @return the cfm_master
	 * @throws PortalException if a cfm_master with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public cfm_master getcfm_master(long cid)
		throws PortalException, SystemException {
		return cfm_masterPersistence.findByPrimaryKey(cid);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return cfm_masterPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the cfm_masters.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.db.model.impl.cfm_masterModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of cfm_masters
	 * @param end the upper bound of the range of cfm_masters (not inclusive)
	 * @return the range of cfm_masters
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<cfm_master> getcfm_masters(int start, int end)
		throws SystemException {
		return cfm_masterPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of cfm_masters.
	 *
	 * @return the number of cfm_masters
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getcfm_mastersCount() throws SystemException {
		return cfm_masterPersistence.countAll();
	}

	/**
	 * Updates the cfm_master in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param cfm_master the cfm_master
	 * @return the cfm_master that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public cfm_master updatecfm_master(cfm_master cfm_master)
		throws SystemException {
		return cfm_masterPersistence.update(cfm_master);
	}

	/**
	 * Returns the about_us local service.
	 *
	 * @return the about_us local service
	 */
	public com.db.service.about_usLocalService getabout_usLocalService() {
		return about_usLocalService;
	}

	/**
	 * Sets the about_us local service.
	 *
	 * @param about_usLocalService the about_us local service
	 */
	public void setabout_usLocalService(
		com.db.service.about_usLocalService about_usLocalService) {
		this.about_usLocalService = about_usLocalService;
	}

	/**
	 * Returns the about_us remote service.
	 *
	 * @return the about_us remote service
	 */
	public com.db.service.about_usService getabout_usService() {
		return about_usService;
	}

	/**
	 * Sets the about_us remote service.
	 *
	 * @param about_usService the about_us remote service
	 */
	public void setabout_usService(
		com.db.service.about_usService about_usService) {
		this.about_usService = about_usService;
	}

	/**
	 * Returns the about_us persistence.
	 *
	 * @return the about_us persistence
	 */
	public about_usPersistence getabout_usPersistence() {
		return about_usPersistence;
	}

	/**
	 * Sets the about_us persistence.
	 *
	 * @param about_usPersistence the about_us persistence
	 */
	public void setabout_usPersistence(about_usPersistence about_usPersistence) {
		this.about_usPersistence = about_usPersistence;
	}

	/**
	 * Returns the acheivements local service.
	 *
	 * @return the acheivements local service
	 */
	public com.db.service.acheivementsLocalService getacheivementsLocalService() {
		return acheivementsLocalService;
	}

	/**
	 * Sets the acheivements local service.
	 *
	 * @param acheivementsLocalService the acheivements local service
	 */
	public void setacheivementsLocalService(
		com.db.service.acheivementsLocalService acheivementsLocalService) {
		this.acheivementsLocalService = acheivementsLocalService;
	}

	/**
	 * Returns the acheivements remote service.
	 *
	 * @return the acheivements remote service
	 */
	public com.db.service.acheivementsService getacheivementsService() {
		return acheivementsService;
	}

	/**
	 * Sets the acheivements remote service.
	 *
	 * @param acheivementsService the acheivements remote service
	 */
	public void setacheivementsService(
		com.db.service.acheivementsService acheivementsService) {
		this.acheivementsService = acheivementsService;
	}

	/**
	 * Returns the acheivements persistence.
	 *
	 * @return the acheivements persistence
	 */
	public acheivementsPersistence getacheivementsPersistence() {
		return acheivementsPersistence;
	}

	/**
	 * Sets the acheivements persistence.
	 *
	 * @param acheivementsPersistence the acheivements persistence
	 */
	public void setacheivementsPersistence(
		acheivementsPersistence acheivementsPersistence) {
		this.acheivementsPersistence = acheivementsPersistence;
	}

	/**
	 * Returns the cfm local service.
	 *
	 * @return the cfm local service
	 */
	public com.db.service.cfmLocalService getcfmLocalService() {
		return cfmLocalService;
	}

	/**
	 * Sets the cfm local service.
	 *
	 * @param cfmLocalService the cfm local service
	 */
	public void setcfmLocalService(
		com.db.service.cfmLocalService cfmLocalService) {
		this.cfmLocalService = cfmLocalService;
	}

	/**
	 * Returns the cfm remote service.
	 *
	 * @return the cfm remote service
	 */
	public com.db.service.cfmService getcfmService() {
		return cfmService;
	}

	/**
	 * Sets the cfm remote service.
	 *
	 * @param cfmService the cfm remote service
	 */
	public void setcfmService(com.db.service.cfmService cfmService) {
		this.cfmService = cfmService;
	}

	/**
	 * Returns the cfm persistence.
	 *
	 * @return the cfm persistence
	 */
	public cfmPersistence getcfmPersistence() {
		return cfmPersistence;
	}

	/**
	 * Sets the cfm persistence.
	 *
	 * @param cfmPersistence the cfm persistence
	 */
	public void setcfmPersistence(cfmPersistence cfmPersistence) {
		this.cfmPersistence = cfmPersistence;
	}

	/**
	 * Returns the cfm_master local service.
	 *
	 * @return the cfm_master local service
	 */
	public com.db.service.cfm_masterLocalService getcfm_masterLocalService() {
		return cfm_masterLocalService;
	}

	/**
	 * Sets the cfm_master local service.
	 *
	 * @param cfm_masterLocalService the cfm_master local service
	 */
	public void setcfm_masterLocalService(
		com.db.service.cfm_masterLocalService cfm_masterLocalService) {
		this.cfm_masterLocalService = cfm_masterLocalService;
	}

	/**
	 * Returns the cfm_master remote service.
	 *
	 * @return the cfm_master remote service
	 */
	public com.db.service.cfm_masterService getcfm_masterService() {
		return cfm_masterService;
	}

	/**
	 * Sets the cfm_master remote service.
	 *
	 * @param cfm_masterService the cfm_master remote service
	 */
	public void setcfm_masterService(
		com.db.service.cfm_masterService cfm_masterService) {
		this.cfm_masterService = cfm_masterService;
	}

	/**
	 * Returns the cfm_master persistence.
	 *
	 * @return the cfm_master persistence
	 */
	public cfm_masterPersistence getcfm_masterPersistence() {
		return cfm_masterPersistence;
	}

	/**
	 * Sets the cfm_master persistence.
	 *
	 * @param cfm_masterPersistence the cfm_master persistence
	 */
	public void setcfm_masterPersistence(
		cfm_masterPersistence cfm_masterPersistence) {
		this.cfm_masterPersistence = cfm_masterPersistence;
	}

	/**
	 * Returns the club_users local service.
	 *
	 * @return the club_users local service
	 */
	public com.db.service.club_usersLocalService getclub_usersLocalService() {
		return club_usersLocalService;
	}

	/**
	 * Sets the club_users local service.
	 *
	 * @param club_usersLocalService the club_users local service
	 */
	public void setclub_usersLocalService(
		com.db.service.club_usersLocalService club_usersLocalService) {
		this.club_usersLocalService = club_usersLocalService;
	}

	/**
	 * Returns the club_users remote service.
	 *
	 * @return the club_users remote service
	 */
	public com.db.service.club_usersService getclub_usersService() {
		return club_usersService;
	}

	/**
	 * Sets the club_users remote service.
	 *
	 * @param club_usersService the club_users remote service
	 */
	public void setclub_usersService(
		com.db.service.club_usersService club_usersService) {
		this.club_usersService = club_usersService;
	}

	/**
	 * Returns the club_users persistence.
	 *
	 * @return the club_users persistence
	 */
	public club_usersPersistence getclub_usersPersistence() {
		return club_usersPersistence;
	}

	/**
	 * Sets the club_users persistence.
	 *
	 * @param club_usersPersistence the club_users persistence
	 */
	public void setclub_usersPersistence(
		club_usersPersistence club_usersPersistence) {
		this.club_usersPersistence = club_usersPersistence;
	}

	/**
	 * Returns the clubs local service.
	 *
	 * @return the clubs local service
	 */
	public com.db.service.clubsLocalService getclubsLocalService() {
		return clubsLocalService;
	}

	/**
	 * Sets the clubs local service.
	 *
	 * @param clubsLocalService the clubs local service
	 */
	public void setclubsLocalService(
		com.db.service.clubsLocalService clubsLocalService) {
		this.clubsLocalService = clubsLocalService;
	}

	/**
	 * Returns the clubs remote service.
	 *
	 * @return the clubs remote service
	 */
	public com.db.service.clubsService getclubsService() {
		return clubsService;
	}

	/**
	 * Sets the clubs remote service.
	 *
	 * @param clubsService the clubs remote service
	 */
	public void setclubsService(com.db.service.clubsService clubsService) {
		this.clubsService = clubsService;
	}

	/**
	 * Returns the clubs persistence.
	 *
	 * @return the clubs persistence
	 */
	public clubsPersistence getclubsPersistence() {
		return clubsPersistence;
	}

	/**
	 * Sets the clubs persistence.
	 *
	 * @param clubsPersistence the clubs persistence
	 */
	public void setclubsPersistence(clubsPersistence clubsPersistence) {
		this.clubsPersistence = clubsPersistence;
	}

	/**
	 * Returns the genere_master local service.
	 *
	 * @return the genere_master local service
	 */
	public com.db.service.genere_masterLocalService getgenere_masterLocalService() {
		return genere_masterLocalService;
	}

	/**
	 * Sets the genere_master local service.
	 *
	 * @param genere_masterLocalService the genere_master local service
	 */
	public void setgenere_masterLocalService(
		com.db.service.genere_masterLocalService genere_masterLocalService) {
		this.genere_masterLocalService = genere_masterLocalService;
	}

	/**
	 * Returns the genere_master remote service.
	 *
	 * @return the genere_master remote service
	 */
	public com.db.service.genere_masterService getgenere_masterService() {
		return genere_masterService;
	}

	/**
	 * Sets the genere_master remote service.
	 *
	 * @param genere_masterService the genere_master remote service
	 */
	public void setgenere_masterService(
		com.db.service.genere_masterService genere_masterService) {
		this.genere_masterService = genere_masterService;
	}

	/**
	 * Returns the genere_master persistence.
	 *
	 * @return the genere_master persistence
	 */
	public genere_masterPersistence getgenere_masterPersistence() {
		return genere_masterPersistence;
	}

	/**
	 * Sets the genere_master persistence.
	 *
	 * @param genere_masterPersistence the genere_master persistence
	 */
	public void setgenere_masterPersistence(
		genere_masterPersistence genere_masterPersistence) {
		this.genere_masterPersistence = genere_masterPersistence;
	}

	/**
	 * Returns the hit_count local service.
	 *
	 * @return the hit_count local service
	 */
	public com.db.service.hit_countLocalService gethit_countLocalService() {
		return hit_countLocalService;
	}

	/**
	 * Sets the hit_count local service.
	 *
	 * @param hit_countLocalService the hit_count local service
	 */
	public void sethit_countLocalService(
		com.db.service.hit_countLocalService hit_countLocalService) {
		this.hit_countLocalService = hit_countLocalService;
	}

	/**
	 * Returns the hit_count remote service.
	 *
	 * @return the hit_count remote service
	 */
	public com.db.service.hit_countService gethit_countService() {
		return hit_countService;
	}

	/**
	 * Sets the hit_count remote service.
	 *
	 * @param hit_countService the hit_count remote service
	 */
	public void sethit_countService(
		com.db.service.hit_countService hit_countService) {
		this.hit_countService = hit_countService;
	}

	/**
	 * Returns the hit_count persistence.
	 *
	 * @return the hit_count persistence
	 */
	public hit_countPersistence gethit_countPersistence() {
		return hit_countPersistence;
	}

	/**
	 * Sets the hit_count persistence.
	 *
	 * @param hit_countPersistence the hit_count persistence
	 */
	public void sethit_countPersistence(
		hit_countPersistence hit_countPersistence) {
		this.hit_countPersistence = hit_countPersistence;
	}

	/**
	 * Returns the media_links local service.
	 *
	 * @return the media_links local service
	 */
	public com.db.service.media_linksLocalService getmedia_linksLocalService() {
		return media_linksLocalService;
	}

	/**
	 * Sets the media_links local service.
	 *
	 * @param media_linksLocalService the media_links local service
	 */
	public void setmedia_linksLocalService(
		com.db.service.media_linksLocalService media_linksLocalService) {
		this.media_linksLocalService = media_linksLocalService;
	}

	/**
	 * Returns the media_links remote service.
	 *
	 * @return the media_links remote service
	 */
	public com.db.service.media_linksService getmedia_linksService() {
		return media_linksService;
	}

	/**
	 * Sets the media_links remote service.
	 *
	 * @param media_linksService the media_links remote service
	 */
	public void setmedia_linksService(
		com.db.service.media_linksService media_linksService) {
		this.media_linksService = media_linksService;
	}

	/**
	 * Returns the media_links persistence.
	 *
	 * @return the media_links persistence
	 */
	public media_linksPersistence getmedia_linksPersistence() {
		return media_linksPersistence;
	}

	/**
	 * Sets the media_links persistence.
	 *
	 * @param media_linksPersistence the media_links persistence
	 */
	public void setmedia_linksPersistence(
		media_linksPersistence media_linksPersistence) {
		this.media_linksPersistence = media_linksPersistence;
	}

	/**
	 * Returns the media_links_master local service.
	 *
	 * @return the media_links_master local service
	 */
	public com.db.service.media_links_masterLocalService getmedia_links_masterLocalService() {
		return media_links_masterLocalService;
	}

	/**
	 * Sets the media_links_master local service.
	 *
	 * @param media_links_masterLocalService the media_links_master local service
	 */
	public void setmedia_links_masterLocalService(
		com.db.service.media_links_masterLocalService media_links_masterLocalService) {
		this.media_links_masterLocalService = media_links_masterLocalService;
	}

	/**
	 * Returns the media_links_master remote service.
	 *
	 * @return the media_links_master remote service
	 */
	public com.db.service.media_links_masterService getmedia_links_masterService() {
		return media_links_masterService;
	}

	/**
	 * Sets the media_links_master remote service.
	 *
	 * @param media_links_masterService the media_links_master remote service
	 */
	public void setmedia_links_masterService(
		com.db.service.media_links_masterService media_links_masterService) {
		this.media_links_masterService = media_links_masterService;
	}

	/**
	 * Returns the media_links_master persistence.
	 *
	 * @return the media_links_master persistence
	 */
	public media_links_masterPersistence getmedia_links_masterPersistence() {
		return media_links_masterPersistence;
	}

	/**
	 * Sets the media_links_master persistence.
	 *
	 * @param media_links_masterPersistence the media_links_master persistence
	 */
	public void setmedia_links_masterPersistence(
		media_links_masterPersistence media_links_masterPersistence) {
		this.media_links_masterPersistence = media_links_masterPersistence;
	}

	/**
	 * Returns the messages local service.
	 *
	 * @return the messages local service
	 */
	public com.db.service.messagesLocalService getmessagesLocalService() {
		return messagesLocalService;
	}

	/**
	 * Sets the messages local service.
	 *
	 * @param messagesLocalService the messages local service
	 */
	public void setmessagesLocalService(
		com.db.service.messagesLocalService messagesLocalService) {
		this.messagesLocalService = messagesLocalService;
	}

	/**
	 * Returns the messages remote service.
	 *
	 * @return the messages remote service
	 */
	public com.db.service.messagesService getmessagesService() {
		return messagesService;
	}

	/**
	 * Sets the messages remote service.
	 *
	 * @param messagesService the messages remote service
	 */
	public void setmessagesService(
		com.db.service.messagesService messagesService) {
		this.messagesService = messagesService;
	}

	/**
	 * Returns the messages persistence.
	 *
	 * @return the messages persistence
	 */
	public messagesPersistence getmessagesPersistence() {
		return messagesPersistence;
	}

	/**
	 * Sets the messages persistence.
	 *
	 * @param messagesPersistence the messages persistence
	 */
	public void setmessagesPersistence(messagesPersistence messagesPersistence) {
		this.messagesPersistence = messagesPersistence;
	}

	/**
	 * Returns the notifications local service.
	 *
	 * @return the notifications local service
	 */
	public com.db.service.notificationsLocalService getnotificationsLocalService() {
		return notificationsLocalService;
	}

	/**
	 * Sets the notifications local service.
	 *
	 * @param notificationsLocalService the notifications local service
	 */
	public void setnotificationsLocalService(
		com.db.service.notificationsLocalService notificationsLocalService) {
		this.notificationsLocalService = notificationsLocalService;
	}

	/**
	 * Returns the notifications remote service.
	 *
	 * @return the notifications remote service
	 */
	public com.db.service.notificationsService getnotificationsService() {
		return notificationsService;
	}

	/**
	 * Sets the notifications remote service.
	 *
	 * @param notificationsService the notifications remote service
	 */
	public void setnotificationsService(
		com.db.service.notificationsService notificationsService) {
		this.notificationsService = notificationsService;
	}

	/**
	 * Returns the notifications persistence.
	 *
	 * @return the notifications persistence
	 */
	public notificationsPersistence getnotificationsPersistence() {
		return notificationsPersistence;
	}

	/**
	 * Sets the notifications persistence.
	 *
	 * @param notificationsPersistence the notifications persistence
	 */
	public void setnotificationsPersistence(
		notificationsPersistence notificationsPersistence) {
		this.notificationsPersistence = notificationsPersistence;
	}

	/**
	 * Returns the profile local service.
	 *
	 * @return the profile local service
	 */
	public com.db.service.profileLocalService getprofileLocalService() {
		return profileLocalService;
	}

	/**
	 * Sets the profile local service.
	 *
	 * @param profileLocalService the profile local service
	 */
	public void setprofileLocalService(
		com.db.service.profileLocalService profileLocalService) {
		this.profileLocalService = profileLocalService;
	}

	/**
	 * Returns the profile remote service.
	 *
	 * @return the profile remote service
	 */
	public com.db.service.profileService getprofileService() {
		return profileService;
	}

	/**
	 * Sets the profile remote service.
	 *
	 * @param profileService the profile remote service
	 */
	public void setprofileService(com.db.service.profileService profileService) {
		this.profileService = profileService;
	}

	/**
	 * Returns the profile persistence.
	 *
	 * @return the profile persistence
	 */
	public profilePersistence getprofilePersistence() {
		return profilePersistence;
	}

	/**
	 * Sets the profile persistence.
	 *
	 * @param profilePersistence the profile persistence
	 */
	public void setprofilePersistence(profilePersistence profilePersistence) {
		this.profilePersistence = profilePersistence;
	}

	/**
	 * Returns the profile_social_link local service.
	 *
	 * @return the profile_social_link local service
	 */
	public com.db.service.profile_social_linkLocalService getprofile_social_linkLocalService() {
		return profile_social_linkLocalService;
	}

	/**
	 * Sets the profile_social_link local service.
	 *
	 * @param profile_social_linkLocalService the profile_social_link local service
	 */
	public void setprofile_social_linkLocalService(
		com.db.service.profile_social_linkLocalService profile_social_linkLocalService) {
		this.profile_social_linkLocalService = profile_social_linkLocalService;
	}

	/**
	 * Returns the profile_social_link remote service.
	 *
	 * @return the profile_social_link remote service
	 */
	public com.db.service.profile_social_linkService getprofile_social_linkService() {
		return profile_social_linkService;
	}

	/**
	 * Sets the profile_social_link remote service.
	 *
	 * @param profile_social_linkService the profile_social_link remote service
	 */
	public void setprofile_social_linkService(
		com.db.service.profile_social_linkService profile_social_linkService) {
		this.profile_social_linkService = profile_social_linkService;
	}

	/**
	 * Returns the profile_social_link persistence.
	 *
	 * @return the profile_social_link persistence
	 */
	public profile_social_linkPersistence getprofile_social_linkPersistence() {
		return profile_social_linkPersistence;
	}

	/**
	 * Sets the profile_social_link persistence.
	 *
	 * @param profile_social_linkPersistence the profile_social_link persistence
	 */
	public void setprofile_social_linkPersistence(
		profile_social_linkPersistence profile_social_linkPersistence) {
		this.profile_social_linkPersistence = profile_social_linkPersistence;
	}

	/**
	 * Returns the recommendations local service.
	 *
	 * @return the recommendations local service
	 */
	public com.db.service.recommendationsLocalService getrecommendationsLocalService() {
		return recommendationsLocalService;
	}

	/**
	 * Sets the recommendations local service.
	 *
	 * @param recommendationsLocalService the recommendations local service
	 */
	public void setrecommendationsLocalService(
		com.db.service.recommendationsLocalService recommendationsLocalService) {
		this.recommendationsLocalService = recommendationsLocalService;
	}

	/**
	 * Returns the recommendations remote service.
	 *
	 * @return the recommendations remote service
	 */
	public com.db.service.recommendationsService getrecommendationsService() {
		return recommendationsService;
	}

	/**
	 * Sets the recommendations remote service.
	 *
	 * @param recommendationsService the recommendations remote service
	 */
	public void setrecommendationsService(
		com.db.service.recommendationsService recommendationsService) {
		this.recommendationsService = recommendationsService;
	}

	/**
	 * Returns the recommendations persistence.
	 *
	 * @return the recommendations persistence
	 */
	public recommendationsPersistence getrecommendationsPersistence() {
		return recommendationsPersistence;
	}

	/**
	 * Sets the recommendations persistence.
	 *
	 * @param recommendationsPersistence the recommendations persistence
	 */
	public void setrecommendationsPersistence(
		recommendationsPersistence recommendationsPersistence) {
		this.recommendationsPersistence = recommendationsPersistence;
	}

	/**
	 * Returns the skill local service.
	 *
	 * @return the skill local service
	 */
	public com.db.service.skillLocalService getskillLocalService() {
		return skillLocalService;
	}

	/**
	 * Sets the skill local service.
	 *
	 * @param skillLocalService the skill local service
	 */
	public void setskillLocalService(
		com.db.service.skillLocalService skillLocalService) {
		this.skillLocalService = skillLocalService;
	}

	/**
	 * Returns the skill remote service.
	 *
	 * @return the skill remote service
	 */
	public com.db.service.skillService getskillService() {
		return skillService;
	}

	/**
	 * Sets the skill remote service.
	 *
	 * @param skillService the skill remote service
	 */
	public void setskillService(com.db.service.skillService skillService) {
		this.skillService = skillService;
	}

	/**
	 * Returns the skill persistence.
	 *
	 * @return the skill persistence
	 */
	public skillPersistence getskillPersistence() {
		return skillPersistence;
	}

	/**
	 * Sets the skill persistence.
	 *
	 * @param skillPersistence the skill persistence
	 */
	public void setskillPersistence(skillPersistence skillPersistence) {
		this.skillPersistence = skillPersistence;
	}

	/**
	 * Returns the skill_user_mapping local service.
	 *
	 * @return the skill_user_mapping local service
	 */
	public com.db.service.skill_user_mappingLocalService getskill_user_mappingLocalService() {
		return skill_user_mappingLocalService;
	}

	/**
	 * Sets the skill_user_mapping local service.
	 *
	 * @param skill_user_mappingLocalService the skill_user_mapping local service
	 */
	public void setskill_user_mappingLocalService(
		com.db.service.skill_user_mappingLocalService skill_user_mappingLocalService) {
		this.skill_user_mappingLocalService = skill_user_mappingLocalService;
	}

	/**
	 * Returns the skill_user_mapping remote service.
	 *
	 * @return the skill_user_mapping remote service
	 */
	public com.db.service.skill_user_mappingService getskill_user_mappingService() {
		return skill_user_mappingService;
	}

	/**
	 * Sets the skill_user_mapping remote service.
	 *
	 * @param skill_user_mappingService the skill_user_mapping remote service
	 */
	public void setskill_user_mappingService(
		com.db.service.skill_user_mappingService skill_user_mappingService) {
		this.skill_user_mappingService = skill_user_mappingService;
	}

	/**
	 * Returns the skill_user_mapping persistence.
	 *
	 * @return the skill_user_mapping persistence
	 */
	public skill_user_mappingPersistence getskill_user_mappingPersistence() {
		return skill_user_mappingPersistence;
	}

	/**
	 * Sets the skill_user_mapping persistence.
	 *
	 * @param skill_user_mappingPersistence the skill_user_mapping persistence
	 */
	public void setskill_user_mappingPersistence(
		skill_user_mappingPersistence skill_user_mappingPersistence) {
		this.skill_user_mappingPersistence = skill_user_mappingPersistence;
	}

	/**
	 * Returns the social_login local service.
	 *
	 * @return the social_login local service
	 */
	public com.db.service.social_loginLocalService getsocial_loginLocalService() {
		return social_loginLocalService;
	}

	/**
	 * Sets the social_login local service.
	 *
	 * @param social_loginLocalService the social_login local service
	 */
	public void setsocial_loginLocalService(
		com.db.service.social_loginLocalService social_loginLocalService) {
		this.social_loginLocalService = social_loginLocalService;
	}

	/**
	 * Returns the social_login remote service.
	 *
	 * @return the social_login remote service
	 */
	public com.db.service.social_loginService getsocial_loginService() {
		return social_loginService;
	}

	/**
	 * Sets the social_login remote service.
	 *
	 * @param social_loginService the social_login remote service
	 */
	public void setsocial_loginService(
		com.db.service.social_loginService social_loginService) {
		this.social_loginService = social_loginService;
	}

	/**
	 * Returns the social_login persistence.
	 *
	 * @return the social_login persistence
	 */
	public social_loginPersistence getsocial_loginPersistence() {
		return social_loginPersistence;
	}

	/**
	 * Sets the social_login persistence.
	 *
	 * @param social_loginPersistence the social_login persistence
	 */
	public void setsocial_loginPersistence(
		social_loginPersistence social_loginPersistence) {
		this.social_loginPersistence = social_loginPersistence;
	}

	/**
	 * Returns the social_type_master local service.
	 *
	 * @return the social_type_master local service
	 */
	public com.db.service.social_type_masterLocalService getsocial_type_masterLocalService() {
		return social_type_masterLocalService;
	}

	/**
	 * Sets the social_type_master local service.
	 *
	 * @param social_type_masterLocalService the social_type_master local service
	 */
	public void setsocial_type_masterLocalService(
		com.db.service.social_type_masterLocalService social_type_masterLocalService) {
		this.social_type_masterLocalService = social_type_masterLocalService;
	}

	/**
	 * Returns the social_type_master remote service.
	 *
	 * @return the social_type_master remote service
	 */
	public com.db.service.social_type_masterService getsocial_type_masterService() {
		return social_type_masterService;
	}

	/**
	 * Sets the social_type_master remote service.
	 *
	 * @param social_type_masterService the social_type_master remote service
	 */
	public void setsocial_type_masterService(
		com.db.service.social_type_masterService social_type_masterService) {
		this.social_type_masterService = social_type_masterService;
	}

	/**
	 * Returns the social_type_master persistence.
	 *
	 * @return the social_type_master persistence
	 */
	public social_type_masterPersistence getsocial_type_masterPersistence() {
		return social_type_masterPersistence;
	}

	/**
	 * Sets the social_type_master persistence.
	 *
	 * @param social_type_masterPersistence the social_type_master persistence
	 */
	public void setsocial_type_masterPersistence(
		social_type_masterPersistence social_type_masterPersistence) {
		this.social_type_masterPersistence = social_type_masterPersistence;
	}

	/**
	 * Returns the type_master local service.
	 *
	 * @return the type_master local service
	 */
	public com.db.service.type_masterLocalService gettype_masterLocalService() {
		return type_masterLocalService;
	}

	/**
	 * Sets the type_master local service.
	 *
	 * @param type_masterLocalService the type_master local service
	 */
	public void settype_masterLocalService(
		com.db.service.type_masterLocalService type_masterLocalService) {
		this.type_masterLocalService = type_masterLocalService;
	}

	/**
	 * Returns the type_master remote service.
	 *
	 * @return the type_master remote service
	 */
	public com.db.service.type_masterService gettype_masterService() {
		return type_masterService;
	}

	/**
	 * Sets the type_master remote service.
	 *
	 * @param type_masterService the type_master remote service
	 */
	public void settype_masterService(
		com.db.service.type_masterService type_masterService) {
		this.type_masterService = type_masterService;
	}

	/**
	 * Returns the type_master persistence.
	 *
	 * @return the type_master persistence
	 */
	public type_masterPersistence gettype_masterPersistence() {
		return type_masterPersistence;
	}

	/**
	 * Sets the type_master persistence.
	 *
	 * @param type_masterPersistence the type_master persistence
	 */
	public void settype_masterPersistence(
		type_masterPersistence type_masterPersistence) {
		this.type_masterPersistence = type_masterPersistence;
	}

	/**
	 * Returns the user_contact local service.
	 *
	 * @return the user_contact local service
	 */
	public com.db.service.user_contactLocalService getuser_contactLocalService() {
		return user_contactLocalService;
	}

	/**
	 * Sets the user_contact local service.
	 *
	 * @param user_contactLocalService the user_contact local service
	 */
	public void setuser_contactLocalService(
		com.db.service.user_contactLocalService user_contactLocalService) {
		this.user_contactLocalService = user_contactLocalService;
	}

	/**
	 * Returns the user_contact remote service.
	 *
	 * @return the user_contact remote service
	 */
	public com.db.service.user_contactService getuser_contactService() {
		return user_contactService;
	}

	/**
	 * Sets the user_contact remote service.
	 *
	 * @param user_contactService the user_contact remote service
	 */
	public void setuser_contactService(
		com.db.service.user_contactService user_contactService) {
		this.user_contactService = user_contactService;
	}

	/**
	 * Returns the user_contact persistence.
	 *
	 * @return the user_contact persistence
	 */
	public user_contactPersistence getuser_contactPersistence() {
		return user_contactPersistence;
	}

	/**
	 * Sets the user_contact persistence.
	 *
	 * @param user_contactPersistence the user_contact persistence
	 */
	public void setuser_contactPersistence(
		user_contactPersistence user_contactPersistence) {
		this.user_contactPersistence = user_contactPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.db.model.cfm_master",
			cfm_masterLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.db.model.cfm_master");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return cfm_master.class;
	}

	protected String getModelClassName() {
		return cfm_master.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = cfm_masterPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.db.service.about_usLocalService.class)
	protected com.db.service.about_usLocalService about_usLocalService;
	@BeanReference(type = com.db.service.about_usService.class)
	protected com.db.service.about_usService about_usService;
	@BeanReference(type = about_usPersistence.class)
	protected about_usPersistence about_usPersistence;
	@BeanReference(type = com.db.service.acheivementsLocalService.class)
	protected com.db.service.acheivementsLocalService acheivementsLocalService;
	@BeanReference(type = com.db.service.acheivementsService.class)
	protected com.db.service.acheivementsService acheivementsService;
	@BeanReference(type = acheivementsPersistence.class)
	protected acheivementsPersistence acheivementsPersistence;
	@BeanReference(type = com.db.service.cfmLocalService.class)
	protected com.db.service.cfmLocalService cfmLocalService;
	@BeanReference(type = com.db.service.cfmService.class)
	protected com.db.service.cfmService cfmService;
	@BeanReference(type = cfmPersistence.class)
	protected cfmPersistence cfmPersistence;
	@BeanReference(type = com.db.service.cfm_masterLocalService.class)
	protected com.db.service.cfm_masterLocalService cfm_masterLocalService;
	@BeanReference(type = com.db.service.cfm_masterService.class)
	protected com.db.service.cfm_masterService cfm_masterService;
	@BeanReference(type = cfm_masterPersistence.class)
	protected cfm_masterPersistence cfm_masterPersistence;
	@BeanReference(type = com.db.service.club_usersLocalService.class)
	protected com.db.service.club_usersLocalService club_usersLocalService;
	@BeanReference(type = com.db.service.club_usersService.class)
	protected com.db.service.club_usersService club_usersService;
	@BeanReference(type = club_usersPersistence.class)
	protected club_usersPersistence club_usersPersistence;
	@BeanReference(type = com.db.service.clubsLocalService.class)
	protected com.db.service.clubsLocalService clubsLocalService;
	@BeanReference(type = com.db.service.clubsService.class)
	protected com.db.service.clubsService clubsService;
	@BeanReference(type = clubsPersistence.class)
	protected clubsPersistence clubsPersistence;
	@BeanReference(type = com.db.service.genere_masterLocalService.class)
	protected com.db.service.genere_masterLocalService genere_masterLocalService;
	@BeanReference(type = com.db.service.genere_masterService.class)
	protected com.db.service.genere_masterService genere_masterService;
	@BeanReference(type = genere_masterPersistence.class)
	protected genere_masterPersistence genere_masterPersistence;
	@BeanReference(type = com.db.service.hit_countLocalService.class)
	protected com.db.service.hit_countLocalService hit_countLocalService;
	@BeanReference(type = com.db.service.hit_countService.class)
	protected com.db.service.hit_countService hit_countService;
	@BeanReference(type = hit_countPersistence.class)
	protected hit_countPersistence hit_countPersistence;
	@BeanReference(type = com.db.service.media_linksLocalService.class)
	protected com.db.service.media_linksLocalService media_linksLocalService;
	@BeanReference(type = com.db.service.media_linksService.class)
	protected com.db.service.media_linksService media_linksService;
	@BeanReference(type = media_linksPersistence.class)
	protected media_linksPersistence media_linksPersistence;
	@BeanReference(type = com.db.service.media_links_masterLocalService.class)
	protected com.db.service.media_links_masterLocalService media_links_masterLocalService;
	@BeanReference(type = com.db.service.media_links_masterService.class)
	protected com.db.service.media_links_masterService media_links_masterService;
	@BeanReference(type = media_links_masterPersistence.class)
	protected media_links_masterPersistence media_links_masterPersistence;
	@BeanReference(type = com.db.service.messagesLocalService.class)
	protected com.db.service.messagesLocalService messagesLocalService;
	@BeanReference(type = com.db.service.messagesService.class)
	protected com.db.service.messagesService messagesService;
	@BeanReference(type = messagesPersistence.class)
	protected messagesPersistence messagesPersistence;
	@BeanReference(type = com.db.service.notificationsLocalService.class)
	protected com.db.service.notificationsLocalService notificationsLocalService;
	@BeanReference(type = com.db.service.notificationsService.class)
	protected com.db.service.notificationsService notificationsService;
	@BeanReference(type = notificationsPersistence.class)
	protected notificationsPersistence notificationsPersistence;
	@BeanReference(type = com.db.service.profileLocalService.class)
	protected com.db.service.profileLocalService profileLocalService;
	@BeanReference(type = com.db.service.profileService.class)
	protected com.db.service.profileService profileService;
	@BeanReference(type = profilePersistence.class)
	protected profilePersistence profilePersistence;
	@BeanReference(type = com.db.service.profile_social_linkLocalService.class)
	protected com.db.service.profile_social_linkLocalService profile_social_linkLocalService;
	@BeanReference(type = com.db.service.profile_social_linkService.class)
	protected com.db.service.profile_social_linkService profile_social_linkService;
	@BeanReference(type = profile_social_linkPersistence.class)
	protected profile_social_linkPersistence profile_social_linkPersistence;
	@BeanReference(type = com.db.service.recommendationsLocalService.class)
	protected com.db.service.recommendationsLocalService recommendationsLocalService;
	@BeanReference(type = com.db.service.recommendationsService.class)
	protected com.db.service.recommendationsService recommendationsService;
	@BeanReference(type = recommendationsPersistence.class)
	protected recommendationsPersistence recommendationsPersistence;
	@BeanReference(type = com.db.service.skillLocalService.class)
	protected com.db.service.skillLocalService skillLocalService;
	@BeanReference(type = com.db.service.skillService.class)
	protected com.db.service.skillService skillService;
	@BeanReference(type = skillPersistence.class)
	protected skillPersistence skillPersistence;
	@BeanReference(type = com.db.service.skill_user_mappingLocalService.class)
	protected com.db.service.skill_user_mappingLocalService skill_user_mappingLocalService;
	@BeanReference(type = com.db.service.skill_user_mappingService.class)
	protected com.db.service.skill_user_mappingService skill_user_mappingService;
	@BeanReference(type = skill_user_mappingPersistence.class)
	protected skill_user_mappingPersistence skill_user_mappingPersistence;
	@BeanReference(type = com.db.service.social_loginLocalService.class)
	protected com.db.service.social_loginLocalService social_loginLocalService;
	@BeanReference(type = com.db.service.social_loginService.class)
	protected com.db.service.social_loginService social_loginService;
	@BeanReference(type = social_loginPersistence.class)
	protected social_loginPersistence social_loginPersistence;
	@BeanReference(type = com.db.service.social_type_masterLocalService.class)
	protected com.db.service.social_type_masterLocalService social_type_masterLocalService;
	@BeanReference(type = com.db.service.social_type_masterService.class)
	protected com.db.service.social_type_masterService social_type_masterService;
	@BeanReference(type = social_type_masterPersistence.class)
	protected social_type_masterPersistence social_type_masterPersistence;
	@BeanReference(type = com.db.service.type_masterLocalService.class)
	protected com.db.service.type_masterLocalService type_masterLocalService;
	@BeanReference(type = com.db.service.type_masterService.class)
	protected com.db.service.type_masterService type_masterService;
	@BeanReference(type = type_masterPersistence.class)
	protected type_masterPersistence type_masterPersistence;
	@BeanReference(type = com.db.service.user_contactLocalService.class)
	protected com.db.service.user_contactLocalService user_contactLocalService;
	@BeanReference(type = com.db.service.user_contactService.class)
	protected com.db.service.user_contactService user_contactService;
	@BeanReference(type = user_contactPersistence.class)
	protected user_contactPersistence user_contactPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private cfm_masterLocalServiceClpInvoker _clpInvoker = new cfm_masterLocalServiceClpInvoker();
}